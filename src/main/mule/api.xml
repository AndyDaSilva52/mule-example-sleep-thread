<?xml version="1.0" encoding="UTF-8"?>
<mule
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<apikit:config
		name="api-config"
		api="api.raml"
		outboundHeadersMapName="outboundHeaders"
		httpStatusVarName="httpStatus"/>
	<flow name="api-main">
		<http:listener
			config-ref="api-httpListenerConfig"
			path="/api/*">
			<http:response statusCode="#[vars.httpStatus default 200]">
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:response>
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body>#[payload]</http:body>
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:error-response>
		</http:listener>
		<apikit:router
			config-ref="api-config"
			doc:name="api-config"/>
		<error-handler ref="error-handler"/>
	</flow>
	<flow name="api-console">
		<http:listener
			config-ref="api-httpListenerConfig"
			path="/console/*">
			<http:response statusCode="#[vars.httpStatus default 200]">
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:response>
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body>#[payload]</http:body>
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:error-response>
		</http:listener>
		<apikit:console
			config-ref="api-config"
			doc:name="api-config"/>
		<error-handler ref="error-handler"/>
	</flow>
	<flow name="get:\endpoints:api-config">
		<ee:transform
			doc:name="payload/json"
			doc:id="74a85045-7ec1-4491-a370-a68d031627fb">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var endpoints = readUrl('classpath://api.xml', 'application/xml' ).mule.*flow.@name --  ["api-main", "api-console"] 
---
{
	endpoints: endpoints
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			message="#[output json --- payload]"
			doc:name="INFO payload"/>
	</flow>
	<flow name="get:\sleep:api-config">
		<set-variable
			value="#[dw::util::Timer::currentMilliseconds()]"
			doc:name="start"
			doc:id="46228a52-1afd-49d6-99d3-b87af5a510db"
			variableName="start"/>
		<logger
			level="INFO"
			doc:name="BEFORE_SLEEP"
			doc:id="bc29ecfa-0a58-4719-9a03-b87924df43cd"
			message='#[output json --- {"step": "BEFORE_SLEEP", "start": vars.start }]'/>
		<scripting:execute
			engine="Groovy"
			doc:name="Thread.sleep"
			doc:id="9b12aff8-f7bd-4be2-ae9f-8fd7bbbe5b74">
			<scripting:code><![CDATA[try {
    Thread.sleep(timeInMilliseconds);
} catch (InterruptedException e) {}]]></scripting:code>
			<scripting:parameters><![CDATA[#[{
	timeInMilliseconds: (attributes.queryParams.timeUnit match  {
		case w if(w ~= "MILLISECONDS") -> (attributes.queryParams.time)
    	case w if(w ~= "MINUTES")      -> (attributes.queryParams.time * 60) * 1000
	    case w if(w ~= "SECONDS")      -> (attributes.queryParams.time) * 1000
    	else -> (attributes.queryParams.time) * 1000
	}) as Number
}]]]></scripting:parameters>
		</scripting:execute>
		<ee:transform
			doc:name="payload/json Response"
			doc:id="1db31210-6de8-451d-94db-37e4a7d8f142">
			<ee:message>
				<ee:set-payload><![CDATA[output json
var end = dw::util::Timer::currentMilliseconds()
var diff = (end - vars.start)
---
{
	start: vars.start,
	end: end,
	diff: diff,
	duration: dw::core::Periods::duration( {
		seconds: (diff/1000)
	} )
}
/** */]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="AFTER_SLEEP"
			doc:id="9420d8a3-a87e-4931-925f-6b5d3cc95ede"
			message='#[output json --- {step: "AFTER_SLEEP" } ++ payload]'/>
	</flow>
</mule>
